#!/bin/bash

# Parse flags
INCLUDE_GIT=true
while [[ $# -gt 0 ]]; do
  case "$1" in
    --no-git)
      INCLUDE_GIT=false
      shift
      ;;
    *)
      break
      ;;
  esac
done

SRC="$1"
DEST="$2"

if [[ -z "$SRC" || -z "$DEST" ]]; then
  echo "Usage: cpr [--no-git] <source> <destination>"
  echo "  --no-git: Exclude .git directory from copy (default: includes .git)"
  exit 1
fi

SRC=$(cd "$SRC" && pwd)
DEST=$(mkdir -p "$DEST" && cd "$DEST" && pwd)

cd "$SRC" || exit 1

# Copy tracked and untracked files (respecting .gitignore)
git ls-files --cached --others --exclude-standard -z | \
    xargs -0 -P 8 -I{} bash -c 'file="$1"; dest="$2"; if [[ -f "$file" ]]; then mkdir -p "$dest/$(dirname "$file")"; cp -p "$file" "$dest/$file"; fi' _ {} "$DEST"

# Copy .git directory if not excluded
if [[ "$INCLUDE_GIT" == "true" && -d ".git" ]]; then
  cp -rp .git "$DEST/.git"
  echo "Copied from $SRC to $DEST (including .git) using parallel mode, respecting .gitignore rules."
else
  echo "Copied from $SRC to $DEST (excluding .git) using parallel mode, respecting .gitignore rules."
fi

